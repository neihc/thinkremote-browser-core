// import fullscreenTexturedQuadWGSL from './fullscreenTexturedQuad.wgsl';
// import blurWGSL from './blur.wgsl';

// // Contants from the blur.wgsl shader.
// const tileDim = 128;
// const batch = [4, 4];

// const init  = async ( canvas: HTMLCanvasElement) => {
//   const context = canvas.getContext('webgpu');
//   const adapter = await navigator.gpu.requestAdapter();
//   const device  = await adapter.requestDevice();


//   // TODO
//   // if (!pageState.active) return;

//   const devicePixelRatio = window.devicePixelRatio || 1;
//   const presentationSize = [
//     canvas.clientWidth * devicePixelRatio,
//     canvas.clientHeight * devicePixelRatio,
//   ];
//   const presentationFormat = navigator.gpu.getPreferredCanvasFormat();

//   context.configure({
//     device,
//     size: presentationSize,
//     format: presentationFormat,
//     alphaMode: 'opaque',
//   });

//   const blurPipeline = device.createComputePipeline({
//     layout: 'auto',
//     compute: {
//       module: device.createShaderModule({
//         code: blurWGSL,
//       }),
//       entryPoint: 'main',
//     },
//   });

//   const fullscreenQuadPipeline = device.createRenderPipeline({
//     layout: 'auto',
//     vertex: {
//       module: device.createShaderModule({
//         code: fullscreenTexturedQuadWGSL,
//       }),
//       entryPoint: 'vert_main',
//     },
//     fragment: {
//       module: device.createShaderModule({
//         code: fullscreenTexturedQuadWGSL,
//       }),
//       entryPoint: 'frag_main',
//       targets: [
//         {
//           format: presentationFormat,
//         },
//       ],
//     },
//     primitive: {
//       topology: 'triangle-list',
//     },
//   });

//   const sampler = device.createSampler({
//     magFilter: 'linear',
//     minFilter: 'linear',
//   });
// }

// function convert(frame: VideoFrame) {
  
//   const imageBitmap = await createImageBitmap(frame);

//   const [srcWidth, srcHeight] = [imageBitmap.width, imageBitmap.height];
  
//   const cubeTexture = device.createTexture({
//     size: [srcWidth, srcHeight, 1],
//     format: 'rgba8unorm',
//     usage:
//       GPUTextureUsage.TEXTURE_BINDING |
//       GPUTextureUsage.COPY_DST |
//       GPUTextureUsage.RENDER_ATTACHMENT,
//   });
//   device.queue.copyExternalImageToTexture(
//     { source: imageBitmap },
//     { texture: cubeTexture },
//     [imageBitmap.width, imageBitmap.height]
//   );

//   const textures = [0, 1].map(() => {
//     return device.createTexture({
//       size: {
//         width: srcWidth,
//         height: srcHeight,
//       },
//       format: 'rgba8unorm',
//       usage:
//         GPUTextureUsage.COPY_DST |
//         GPUTextureUsage.STORAGE_BINDING |
//         GPUTextureUsage.TEXTURE_BINDING,
//     });
//   });

//   const buffer0 = (() => {
//     const buffer = device.createBuffer({
//       size: 4,
//       mappedAtCreation: true,
//       usage: GPUBufferUsage.UNIFORM,
//     });
//     new Uint32Array(buffer.getMappedRange())[0] = 0;
//     buffer.unmap();
//     return buffer;
//   })();

//   const buffer1 = (() => {
//     const buffer = device.createBuffer({
//       size: 4,
//       mappedAtCreation: true,
//       usage: GPUBufferUsage.UNIFORM,
//     });
//     new Uint32Array(buffer.getMappedRange())[0] = 1;
//     buffer.unmap();
//     return buffer;
//   })();

//   const blurParamsBuffer = device.createBuffer({
//     size: 8,
//     usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.UNIFORM,
//   });

//   const computeConstants = device.createBindGroup({
//     layout: blurPipeline.getBindGroupLayout(0),
//     entries: [
//       {
//         binding: 0,
//         resource: sampler,
//       },
//       {
//         binding: 1,
//         resource: {
//           buffer: blurParamsBuffer,
//         },
//       },
//     ],
//   });

//   const computeBindGroup0 = device.createBindGroup({
//     layout: blurPipeline.getBindGroupLayout(1),
//     entries: [
//       {
//         binding: 1,
//         resource: cubeTexture.createView(),
//       },
//       {
//         binding: 2,
//         resource: textures[0].createView(),
//       },
//       {
//         binding: 3,
//         resource: {
//           buffer: buffer0,
//         },
//       },
//     ],
//   });

//   const computeBindGroup1 = device.createBindGroup({
//     layout: blurPipeline.getBindGroupLayout(1),
//     entries: [
//       {
//         binding: 1,
//         resource: textures[0].createView(),
//       },
//       {
//         binding: 2,
//         resource: textures[1].createView(),
//       },
//       {
//         binding: 3,
//         resource: {
//           buffer: buffer1,
//         },
//       },
//     ],
//   });

//   const computeBindGroup2 = device.createBindGroup({
//     layout: blurPipeline.getBindGroupLayout(1),
//     entries: [
//       {
//         binding: 1,
//         resource: textures[1].createView(),
//       },
//       {
//         binding: 2,
//         resource: textures[0].createView(),
//       },
//       {
//         binding: 3,
//         resource: {
//           buffer: buffer0,
//         },
//       },
//     ],
//   });

//   const showResultBindGroup = device.createBindGroup({
//     layout: fullscreenQuadPipeline.getBindGroupLayout(0),
//     entries: [
//       {
//         binding: 0,
//         resource: sampler,
//       },
//       {
//         binding: 1,
//         resource: textures[1].createView(),
//       },
//     ],
//   });

//   const settings = {
//     filterSize: 15,
//     iterations: 2,
//   };

//   let blockDim: number;
//   const updateSettings = () => {
//     blockDim = tileDim - (settings.filterSize - 1);
//     device.queue.writeBuffer(
//       blurParamsBuffer,
//       0,
//       new Uint32Array([settings.filterSize, blockDim])
//     );
//   };

//   updateSettings();


//   requestAnimationFrame(frame_callback);
// }
